#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace INN_CSHARP
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MG_inkjop")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertflower(flower instance);
    partial void Updateflower(flower instance);
    partial void Deleteflower(flower instance);
    partial void Insertfarm(farm instance);
    partial void Updatefarm(farm instance);
    partial void Deletefarm(farm instance);
    partial void Insertcolour(colour instance);
    partial void Updatecolour(colour instance);
    partial void Deletecolour(colour instance);
    partial void Insertlengths(lengths instance);
    partial void Updatelengths(lengths instance);
    partial void Deletelengths(lengths instance);
    partial void Insertsleeve(sleeve instance);
    partial void Updatesleeve(sleeve instance);
    partial void Deletesleeve(sleeve instance);
    partial void Insertorders(orders instance);
    partial void Updateorders(orders instance);
    partial void Deleteorders(orders instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::INN_CSHARP.Properties.Settings.Default.MG_inkjopConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<flower> flowers
		{
			get
			{
				return this.GetTable<flower>();
			}
		}
		
		public System.Data.Linq.Table<farm> farms
		{
			get
			{
				return this.GetTable<farm>();
			}
		}
		
		public System.Data.Linq.Table<colour> colours
		{
			get
			{
				return this.GetTable<colour>();
			}
		}
		
		public System.Data.Linq.Table<lengths> lengths
		{
			get
			{
				return this.GetTable<lengths>();
			}
		}
		
		public System.Data.Linq.Table<sleeve> sleeves
		{
			get
			{
				return this.GetTable<sleeve>();
			}
		}
		
		public System.Data.Linq.Table<orders> orders
		{
			get
			{
				return this.GetTable<orders>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.flowers")]
	public partial class flower : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _fl_id;
		
		private string _variety;
		
		private int _colour;
		
		private string _plu;
		
		private int _farm_id;
		
		private bool _mix;
		
		private string _sticker_text;
		
		private int _length_id;
		
		private int _sleeve_id;
		
		private decimal _fob;
		
		private bool _fairtrade;
		
		private byte _bunch_pr_bucket;
		
		private byte _stems_pr_bunch;
		
		private int _pak_rate;
		
		private EntitySet<orders> _orders;
		
		private EntityRef<farm> _farm;
		
		private EntityRef<colour> _colour1;
		
		private EntityRef<lengths> _length;
		
		private EntityRef<sleeve> _sleeve;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onfl_idChanging(int value);
    partial void Onfl_idChanged();
    partial void OnvarietyChanging(string value);
    partial void OnvarietyChanged();
    partial void OncolourChanging(int value);
    partial void OncolourChanged();
    partial void OnpluChanging(string value);
    partial void OnpluChanged();
    partial void Onfarm_idChanging(int value);
    partial void Onfarm_idChanged();
    partial void OnmixChanging(bool value);
    partial void OnmixChanged();
    partial void Onsticker_textChanging(string value);
    partial void Onsticker_textChanged();
    partial void Onlength_idChanging(int value);
    partial void Onlength_idChanged();
    partial void Onsleeve_idChanging(int value);
    partial void Onsleeve_idChanged();
    partial void OnfobChanging(decimal value);
    partial void OnfobChanged();
    partial void OnfairtradeChanging(bool value);
    partial void OnfairtradeChanged();
    partial void Onbunch_pr_bucketChanging(byte value);
    partial void Onbunch_pr_bucketChanged();
    partial void Onstems_pr_bunchChanging(byte value);
    partial void Onstems_pr_bunchChanged();
    partial void Onpak_rateChanging(int value);
    partial void Onpak_rateChanged();
    #endregion
		
		public flower()
		{
			this._orders = new EntitySet<orders>(new Action<orders>(this.attach_orders), new Action<orders>(this.detach_orders));
			this._farm = default(EntityRef<farm>);
			this._colour1 = default(EntityRef<colour>);
			this._length = default(EntityRef<lengths>);
			this._sleeve = default(EntityRef<sleeve>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fl_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int fl_id
		{
			get
			{
				return this._fl_id;
			}
			set
			{
				if ((this._fl_id != value))
				{
					this.Onfl_idChanging(value);
					this.SendPropertyChanging();
					this._fl_id = value;
					this.SendPropertyChanged("fl_id");
					this.Onfl_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_variety", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string variety
		{
			get
			{
				return this._variety;
			}
			set
			{
				if ((this._variety != value))
				{
					this.OnvarietyChanging(value);
					this.SendPropertyChanging();
					this._variety = value;
					this.SendPropertyChanged("variety");
					this.OnvarietyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colour", DbType="Int NOT NULL")]
		public int colour
		{
			get
			{
				return this._colour;
			}
			set
			{
				if ((this._colour != value))
				{
					if (this._colour1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncolourChanging(value);
					this.SendPropertyChanging();
					this._colour = value;
					this.SendPropertyChanged("colour");
					this.OncolourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_plu", DbType="Char(6) NOT NULL", CanBeNull=false)]
		public string plu
		{
			get
			{
				return this._plu;
			}
			set
			{
				if ((this._plu != value))
				{
					this.OnpluChanging(value);
					this.SendPropertyChanging();
					this._plu = value;
					this.SendPropertyChanged("plu");
					this.OnpluChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_farm_id", DbType="Int NOT NULL")]
		public int farm_id
		{
			get
			{
				return this._farm_id;
			}
			set
			{
				if ((this._farm_id != value))
				{
					if (this._farm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfarm_idChanging(value);
					this.SendPropertyChanging();
					this._farm_id = value;
					this.SendPropertyChanged("farm_id");
					this.Onfarm_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mix", DbType="Bit NOT NULL")]
		public bool mix
		{
			get
			{
				return this._mix;
			}
			set
			{
				if ((this._mix != value))
				{
					this.OnmixChanging(value);
					this.SendPropertyChanging();
					this._mix = value;
					this.SendPropertyChanged("mix");
					this.OnmixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sticker_text", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string sticker_text
		{
			get
			{
				return this._sticker_text;
			}
			set
			{
				if ((this._sticker_text != value))
				{
					this.Onsticker_textChanging(value);
					this.SendPropertyChanging();
					this._sticker_text = value;
					this.SendPropertyChanged("sticker_text");
					this.Onsticker_textChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_length_id", DbType="Int NOT NULL")]
		public int length_id
		{
			get
			{
				return this._length_id;
			}
			set
			{
				if ((this._length_id != value))
				{
					if (this._length.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlength_idChanging(value);
					this.SendPropertyChanging();
					this._length_id = value;
					this.SendPropertyChanged("length_id");
					this.Onlength_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sleeve_id", DbType="Int NOT NULL")]
		public int sleeve_id
		{
			get
			{
				return this._sleeve_id;
			}
			set
			{
				if ((this._sleeve_id != value))
				{
					if (this._sleeve.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsleeve_idChanging(value);
					this.SendPropertyChanging();
					this._sleeve_id = value;
					this.SendPropertyChanged("sleeve_id");
					this.Onsleeve_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fob", DbType="Decimal(18,2) NOT NULL")]
		public decimal fob
		{
			get
			{
				return this._fob;
			}
			set
			{
				if ((this._fob != value))
				{
					this.OnfobChanging(value);
					this.SendPropertyChanging();
					this._fob = value;
					this.SendPropertyChanged("fob");
					this.OnfobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fairtrade", DbType="Bit NOT NULL")]
		public bool fairtrade
		{
			get
			{
				return this._fairtrade;
			}
			set
			{
				if ((this._fairtrade != value))
				{
					this.OnfairtradeChanging(value);
					this.SendPropertyChanging();
					this._fairtrade = value;
					this.SendPropertyChanged("fairtrade");
					this.OnfairtradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bunch_pr_bucket", DbType="TinyInt NOT NULL")]
		public byte bunch_pr_bucket
		{
			get
			{
				return this._bunch_pr_bucket;
			}
			set
			{
				if ((this._bunch_pr_bucket != value))
				{
					this.Onbunch_pr_bucketChanging(value);
					this.SendPropertyChanging();
					this._bunch_pr_bucket = value;
					this.SendPropertyChanged("bunch_pr_bucket");
					this.Onbunch_pr_bucketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stems_pr_bunch", DbType="TinyInt NOT NULL")]
		public byte stems_pr_bunch
		{
			get
			{
				return this._stems_pr_bunch;
			}
			set
			{
				if ((this._stems_pr_bunch != value))
				{
					this.Onstems_pr_bunchChanging(value);
					this.SendPropertyChanging();
					this._stems_pr_bunch = value;
					this.SendPropertyChanged("stems_pr_bunch");
					this.Onstems_pr_bunchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pak_rate", DbType="Int NOT NULL")]
		public int pak_rate
		{
			get
			{
				return this._pak_rate;
			}
			set
			{
				if ((this._pak_rate != value))
				{
					this.Onpak_rateChanging(value);
					this.SendPropertyChanging();
					this._pak_rate = value;
					this.SendPropertyChanged("pak_rate");
					this.Onpak_rateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="flower_order", Storage="_orders", ThisKey="fl_id", OtherKey="fl_id")]
		public EntitySet<orders> orders
		{
			get
			{
				return this._orders;
			}
			set
			{
				this._orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="farm_flower", Storage="_farm", ThisKey="farm_id", OtherKey="farm_id", IsForeignKey=true)]
		public farm farm
		{
			get
			{
				return this._farm.Entity;
			}
			set
			{
				farm previousValue = this._farm.Entity;
				if (((previousValue != value) 
							|| (this._farm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._farm.Entity = null;
						previousValue.flowers.Remove(this);
					}
					this._farm.Entity = value;
					if ((value != null))
					{
						value.flowers.Add(this);
						this._farm_id = value.farm_id;
					}
					else
					{
						this._farm_id = default(int);
					}
					this.SendPropertyChanged("farm");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="colour_flower", Storage="_colour1", ThisKey="colour", OtherKey="colour_id", IsForeignKey=true)]
		public colour colour1
		{
			get
			{
				return this._colour1.Entity;
			}
			set
			{
				colour previousValue = this._colour1.Entity;
				if (((previousValue != value) 
							|| (this._colour1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._colour1.Entity = null;
						previousValue.flowers.Remove(this);
					}
					this._colour1.Entity = value;
					if ((value != null))
					{
						value.flowers.Add(this);
						this._colour = value.colour_id;
					}
					else
					{
						this._colour = default(int);
					}
					this.SendPropertyChanged("colour1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lengths_flower", Storage="_length", ThisKey="length_id", OtherKey="length_id", IsForeignKey=true)]
		public lengths lengths
		{
			get
			{
				return this._length.Entity;
			}
			set
			{
				lengths previousValue = this._length.Entity;
				if (((previousValue != value) 
							|| (this._length.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._length.Entity = null;
						previousValue.flowers.Remove(this);
					}
					this._length.Entity = value;
					if ((value != null))
					{
						value.flowers.Add(this);
						this._length_id = value.length_id;
					}
					else
					{
						this._length_id = default(int);
					}
					this.SendPropertyChanged("lengths");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sleeve_flower", Storage="_sleeve", ThisKey="sleeve_id", OtherKey="sleeve_id", IsForeignKey=true)]
		public sleeve sleeve
		{
			get
			{
				return this._sleeve.Entity;
			}
			set
			{
				sleeve previousValue = this._sleeve.Entity;
				if (((previousValue != value) 
							|| (this._sleeve.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._sleeve.Entity = null;
						previousValue.flowers.Remove(this);
					}
					this._sleeve.Entity = value;
					if ((value != null))
					{
						value.flowers.Add(this);
						this._sleeve_id = value.sleeve_id;
					}
					else
					{
						this._sleeve_id = default(int);
					}
					this.SendPropertyChanged("sleeve");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_orders(orders entity)
		{
			this.SendPropertyChanging();
			entity.flower = this;
		}
		
		private void detach_orders(orders entity)
		{
			this.SendPropertyChanging();
			entity.flower = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.farms")]
	public partial class farm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _farm_id;
		
		private string _farm_name;
		
		private string _farm_code;
		
		private EntitySet<flower> _flowers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onfarm_idChanging(int value);
    partial void Onfarm_idChanged();
    partial void Onfarm_nameChanging(string value);
    partial void Onfarm_nameChanged();
    partial void Onfarm_codeChanging(string value);
    partial void Onfarm_codeChanged();
    #endregion
		
		public farm()
		{
			this._flowers = new EntitySet<flower>(new Action<flower>(this.attach_flowers), new Action<flower>(this.detach_flowers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_farm_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int farm_id
		{
			get
			{
				return this._farm_id;
			}
			set
			{
				if ((this._farm_id != value))
				{
					this.Onfarm_idChanging(value);
					this.SendPropertyChanging();
					this._farm_id = value;
					this.SendPropertyChanged("farm_id");
					this.Onfarm_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_farm_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string farm_name
		{
			get
			{
				return this._farm_name;
			}
			set
			{
				if ((this._farm_name != value))
				{
					this.Onfarm_nameChanging(value);
					this.SendPropertyChanging();
					this._farm_name = value;
					this.SendPropertyChanged("farm_name");
					this.Onfarm_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_farm_code", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string farm_code
		{
			get
			{
				return this._farm_code;
			}
			set
			{
				if ((this._farm_code != value))
				{
					this.Onfarm_codeChanging(value);
					this.SendPropertyChanging();
					this._farm_code = value;
					this.SendPropertyChanged("farm_code");
					this.Onfarm_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="farm_flower", Storage="_flowers", ThisKey="farm_id", OtherKey="farm_id")]
		public EntitySet<flower> flowers
		{
			get
			{
				return this._flowers;
			}
			set
			{
				this._flowers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_flowers(flower entity)
		{
			this.SendPropertyChanging();
			entity.farm = this;
		}
		
		private void detach_flowers(flower entity)
		{
			this.SendPropertyChanging();
			entity.farm = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.colours")]
	public partial class colour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _colour_id;
		
		private string _colour1;
		
		private EntitySet<flower> _flowers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncolour_idChanging(int value);
    partial void Oncolour_idChanged();
    partial void Oncolour1Changing(string value);
    partial void Oncolour1Changed();
    #endregion
		
		public colour()
		{
			this._flowers = new EntitySet<flower>(new Action<flower>(this.attach_flowers), new Action<flower>(this.detach_flowers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colour_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int colour_id
		{
			get
			{
				return this._colour_id;
			}
			set
			{
				if ((this._colour_id != value))
				{
					this.Oncolour_idChanging(value);
					this.SendPropertyChanging();
					this._colour_id = value;
					this.SendPropertyChanged("colour_id");
					this.Oncolour_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="colour", Storage="_colour1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string colour1
		{
			get
			{
				return this._colour1;
			}
			set
			{
				if ((this._colour1 != value))
				{
					this.Oncolour1Changing(value);
					this.SendPropertyChanging();
					this._colour1 = value;
					this.SendPropertyChanged("colour1");
					this.Oncolour1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="colour_flower", Storage="_flowers", ThisKey="colour_id", OtherKey="colour")]
		public EntitySet<flower> flowers
		{
			get
			{
				return this._flowers;
			}
			set
			{
				this._flowers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_flowers(flower entity)
		{
			this.SendPropertyChanging();
			entity.colour1 = this;
		}
		
		private void detach_flowers(flower entity)
		{
			this.SendPropertyChanging();
			entity.colour1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lengths")]
	public partial class lengths : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _length_id;
		
		private string _length1;
		
		private EntitySet<flower> _flowers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onlength_idChanging(int value);
    partial void Onlength_idChanged();
    partial void Onlength1Changing(string value);
    partial void Onlength1Changed();
    #endregion
		
		public lengths()
		{
			this._flowers = new EntitySet<flower>(new Action<flower>(this.attach_flowers), new Action<flower>(this.detach_flowers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_length_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int length_id
		{
			get
			{
				return this._length_id;
			}
			set
			{
				if ((this._length_id != value))
				{
					this.Onlength_idChanging(value);
					this.SendPropertyChanging();
					this._length_id = value;
					this.SendPropertyChanged("length_id");
					this.Onlength_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="length", Storage="_length1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string length1
		{
			get
			{
				return this._length1;
			}
			set
			{
				if ((this._length1 != value))
				{
					this.Onlength1Changing(value);
					this.SendPropertyChanging();
					this._length1 = value;
					this.SendPropertyChanged("length1");
					this.Onlength1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lengths_flower", Storage="_flowers", ThisKey="length_id", OtherKey="length_id")]
		public EntitySet<flower> flowers
		{
			get
			{
				return this._flowers;
			}
			set
			{
				this._flowers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_flowers(flower entity)
		{
			this.SendPropertyChanging();
			entity.lengths = this;
		}
		
		private void detach_flowers(flower entity)
		{
			this.SendPropertyChanging();
			entity.lengths = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sleeves")]
	public partial class sleeve : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _sleeve_id;
		
		private string _sleeve1;
		
		private string _slevve_plu;
		
		private EntitySet<flower> _flowers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsleeve_idChanging(int value);
    partial void Onsleeve_idChanged();
    partial void Onsleeve1Changing(string value);
    partial void Onsleeve1Changed();
    partial void Onslevve_pluChanging(string value);
    partial void Onslevve_pluChanged();
    #endregion
		
		public sleeve()
		{
			this._flowers = new EntitySet<flower>(new Action<flower>(this.attach_flowers), new Action<flower>(this.detach_flowers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sleeve_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int sleeve_id
		{
			get
			{
				return this._sleeve_id;
			}
			set
			{
				if ((this._sleeve_id != value))
				{
					this.Onsleeve_idChanging(value);
					this.SendPropertyChanging();
					this._sleeve_id = value;
					this.SendPropertyChanged("sleeve_id");
					this.Onsleeve_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="sleeve", Storage="_sleeve1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string sleeve1
		{
			get
			{
				return this._sleeve1;
			}
			set
			{
				if ((this._sleeve1 != value))
				{
					this.Onsleeve1Changing(value);
					this.SendPropertyChanging();
					this._sleeve1 = value;
					this.SendPropertyChanged("sleeve1");
					this.Onsleeve1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_slevve_plu", DbType="Char(6)")]
		public string slevve_plu
		{
			get
			{
				return this._slevve_plu;
			}
			set
			{
				if ((this._slevve_plu != value))
				{
					this.Onslevve_pluChanging(value);
					this.SendPropertyChanging();
					this._slevve_plu = value;
					this.SendPropertyChanged("slevve_plu");
					this.Onslevve_pluChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sleeve_flower", Storage="_flowers", ThisKey="sleeve_id", OtherKey="sleeve_id")]
		public EntitySet<flower> flowers
		{
			get
			{
				return this._flowers;
			}
			set
			{
				this._flowers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_flowers(flower entity)
		{
			this.SendPropertyChanging();
			entity.sleeve = this;
		}
		
		private void detach_flowers(flower entity)
		{
			this.SendPropertyChanging();
			entity.sleeve = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.orders")]
	public partial class orders : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _order_id;
		
		private int _order_nummer;
		
		private System.DateTime _departure;
		
		private System.DateTime _arrival;
		
		private string _datecode;
		
		private int _fl_id;
		
		private int _boxes;
		
		private System.DateTime _date_created;
		
		private System.DateTime _date_modified;
		
		private EntityRef<flower> _flower;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onorder_idChanging(int value);
    partial void Onorder_idChanged();
    partial void Onorder_nummerChanging(int value);
    partial void Onorder_nummerChanged();
    partial void OndepartureChanging(System.DateTime value);
    partial void OndepartureChanged();
    partial void OnarrivalChanging(System.DateTime value);
    partial void OnarrivalChanged();
    partial void OndatecodeChanging(string value);
    partial void OndatecodeChanged();
    partial void Onfl_idChanging(int value);
    partial void Onfl_idChanged();
    partial void OnboxesChanging(int value);
    partial void OnboxesChanged();
    partial void Ondate_createdChanging(System.DateTime value);
    partial void Ondate_createdChanged();
    partial void Ondate_modifiedChanging(System.DateTime value);
    partial void Ondate_modifiedChanged();
    #endregion
		
		public orders()
		{
			this._flower = default(EntityRef<flower>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int order_id
		{
			get
			{
				return this._order_id;
			}
			set
			{
				if ((this._order_id != value))
				{
					this.Onorder_idChanging(value);
					this.SendPropertyChanging();
					this._order_id = value;
					this.SendPropertyChanged("order_id");
					this.Onorder_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_nummer", DbType="Int NOT NULL")]
		public int order_nummer
		{
			get
			{
				return this._order_nummer;
			}
			set
			{
				if ((this._order_nummer != value))
				{
					this.Onorder_nummerChanging(value);
					this.SendPropertyChanging();
					this._order_nummer = value;
					this.SendPropertyChanged("order_nummer");
					this.Onorder_nummerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_departure", DbType="Date NOT NULL")]
		public System.DateTime departure
		{
			get
			{
				return this._departure;
			}
			set
			{
				if ((this._departure != value))
				{
					this.OndepartureChanging(value);
					this.SendPropertyChanging();
					this._departure = value;
					this.SendPropertyChanged("departure");
					this.OndepartureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_arrival", DbType="Date NOT NULL")]
		public System.DateTime arrival
		{
			get
			{
				return this._arrival;
			}
			set
			{
				if ((this._arrival != value))
				{
					this.OnarrivalChanging(value);
					this.SendPropertyChanging();
					this._arrival = value;
					this.SendPropertyChanged("arrival");
					this.OnarrivalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datecode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string datecode
		{
			get
			{
				return this._datecode;
			}
			set
			{
				if ((this._datecode != value))
				{
					this.OndatecodeChanging(value);
					this.SendPropertyChanging();
					this._datecode = value;
					this.SendPropertyChanged("datecode");
					this.OndatecodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fl_id", DbType="Int NOT NULL")]
		public int fl_id
		{
			get
			{
				return this._fl_id;
			}
			set
			{
				if ((this._fl_id != value))
				{
					if (this._flower.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfl_idChanging(value);
					this.SendPropertyChanging();
					this._fl_id = value;
					this.SendPropertyChanged("fl_id");
					this.Onfl_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_boxes", DbType="Int NOT NULL")]
		public int boxes
		{
			get
			{
				return this._boxes;
			}
			set
			{
				if ((this._boxes != value))
				{
					this.OnboxesChanging(value);
					this.SendPropertyChanging();
					this._boxes = value;
					this.SendPropertyChanged("boxes");
					this.OnboxesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_created", DbType="DateTime NOT NULL")]
		public System.DateTime date_created
		{
			get
			{
				return this._date_created;
			}
			set
			{
				if ((this._date_created != value))
				{
					this.Ondate_createdChanging(value);
					this.SendPropertyChanging();
					this._date_created = value;
					this.SendPropertyChanged("date_created");
					this.Ondate_createdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_modified", DbType="DateTime NOT NULL")]
		public System.DateTime date_modified
		{
			get
			{
				return this._date_modified;
			}
			set
			{
				if ((this._date_modified != value))
				{
					this.Ondate_modifiedChanging(value);
					this.SendPropertyChanging();
					this._date_modified = value;
					this.SendPropertyChanged("date_modified");
					this.Ondate_modifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="flower_order", Storage="_flower", ThisKey="fl_id", OtherKey="fl_id", IsForeignKey=true)]
		public flower flower
		{
			get
			{
				return this._flower.Entity;
			}
			set
			{
				flower previousValue = this._flower.Entity;
				if (((previousValue != value) 
							|| (this._flower.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._flower.Entity = null;
						previousValue.orders.Remove(this);
					}
					this._flower.Entity = value;
					if ((value != null))
					{
						value.orders.Add(this);
						this._fl_id = value.fl_id;
					}
					else
					{
						this._fl_id = default(int);
					}
					this.SendPropertyChanged("flower");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
