#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace INN_CSHARP
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MG_inkjop")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertfarm(farm instance);
    partial void Updatefarm(farm instance);
    partial void Deletefarm(farm instance);
    partial void Insertflower(flower instance);
    partial void Updateflower(flower instance);
    partial void Deleteflower(flower instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::INN_CSHARP.Properties.Settings.Default.MG_inkjopConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<farm> farms
		{
			get
			{
				return this.GetTable<farm>();
			}
		}
		
		public System.Data.Linq.Table<flower> flowers
		{
			get
			{
				return this.GetTable<flower>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.farms")]
	public partial class farm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _farm_id;
		
		private string _farm_name;
		
		private string _farm_code;
		
		private EntitySet<flower> _flowers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onfarm_idChanging(int value);
    partial void Onfarm_idChanged();
    partial void Onfarm_nameChanging(string value);
    partial void Onfarm_nameChanged();
    partial void Onfarm_codeChanging(string value);
    partial void Onfarm_codeChanged();
    #endregion
		
		public farm()
		{
			this._flowers = new EntitySet<flower>(new Action<flower>(this.attach_flowers), new Action<flower>(this.detach_flowers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_farm_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int farm_id
		{
			get
			{
				return this._farm_id;
			}
			set
			{
				if ((this._farm_id != value))
				{
					this.Onfarm_idChanging(value);
					this.SendPropertyChanging();
					this._farm_id = value;
					this.SendPropertyChanged("farm_id");
					this.Onfarm_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_farm_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string farm_name
		{
			get
			{
				return this._farm_name;
			}
			set
			{
				if ((this._farm_name != value))
				{
					this.Onfarm_nameChanging(value);
					this.SendPropertyChanging();
					this._farm_name = value;
					this.SendPropertyChanged("farm_name");
					this.Onfarm_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_farm_code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string farm_code
		{
			get
			{
				return this._farm_code;
			}
			set
			{
				if ((this._farm_code != value))
				{
					this.Onfarm_codeChanging(value);
					this.SendPropertyChanging();
					this._farm_code = value;
					this.SendPropertyChanged("farm_code");
					this.Onfarm_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="farm_flower", Storage="_flowers", ThisKey="farm_id", OtherKey="farm_id")]
		public EntitySet<flower> flowers
		{
			get
			{
				return this._flowers;
			}
			set
			{
				this._flowers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_flowers(flower entity)
		{
			this.SendPropertyChanging();
			entity.farm = this;
		}
		
		private void detach_flowers(flower entity)
		{
			this.SendPropertyChanging();
			entity.farm = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.flowers")]
	public partial class flower : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _fl_id;
		
		private string _variety;
		
		private string _colour;
		
		private string _plu;
		
		private int _farm_id;
		
		private string _barcode;
		
		private byte _mix;
		
		private string _sticker_text;
		
		private string _lenght;
		
		private string _bucket_size;
		
		private string _sleeve_type;
		
		private double _fob;
		
		private double _price_pr_bunch;
		
		private byte _fairtrade;
		
		private int _bunch_pr_box;
		
		private int _bunch_pr_bucket;
		
		private int _stems_pr_bunch;
		
		private int _pake_rete;
		
		private EntityRef<farm> _farm;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onfl_idChanging(int value);
    partial void Onfl_idChanged();
    partial void OnvarietyChanging(string value);
    partial void OnvarietyChanged();
    partial void OncolourChanging(string value);
    partial void OncolourChanged();
    partial void OnpluChanging(string value);
    partial void OnpluChanged();
    partial void Onfarm_idChanging(int value);
    partial void Onfarm_idChanged();
    partial void OnbarcodeChanging(string value);
    partial void OnbarcodeChanged();
    partial void OnmixChanging(byte value);
    partial void OnmixChanged();
    partial void Onsticker_textChanging(string value);
    partial void Onsticker_textChanged();
    partial void OnlenghtChanging(string value);
    partial void OnlenghtChanged();
    partial void Onbucket_sizeChanging(string value);
    partial void Onbucket_sizeChanged();
    partial void Onsleeve_typeChanging(string value);
    partial void Onsleeve_typeChanged();
    partial void OnfobChanging(double value);
    partial void OnfobChanged();
    partial void Onprice_pr_bunchChanging(double value);
    partial void Onprice_pr_bunchChanged();
    partial void OnfairtradeChanging(byte value);
    partial void OnfairtradeChanged();
    partial void Onbunch_pr_boxChanging(int value);
    partial void Onbunch_pr_boxChanged();
    partial void Onbunch_pr_bucketChanging(int value);
    partial void Onbunch_pr_bucketChanged();
    partial void Onstems_pr_bunchChanging(int value);
    partial void Onstems_pr_bunchChanged();
    partial void Onpake_reteChanging(int value);
    partial void Onpake_reteChanged();
    #endregion
		
		public flower()
		{
			this._farm = default(EntityRef<farm>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fl_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int fl_id
		{
			get
			{
				return this._fl_id;
			}
			set
			{
				if ((this._fl_id != value))
				{
					this.Onfl_idChanging(value);
					this.SendPropertyChanging();
					this._fl_id = value;
					this.SendPropertyChanged("fl_id");
					this.Onfl_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_variety", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string variety
		{
			get
			{
				return this._variety;
			}
			set
			{
				if ((this._variety != value))
				{
					this.OnvarietyChanging(value);
					this.SendPropertyChanging();
					this._variety = value;
					this.SendPropertyChanged("variety");
					this.OnvarietyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colour", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string colour
		{
			get
			{
				return this._colour;
			}
			set
			{
				if ((this._colour != value))
				{
					this.OncolourChanging(value);
					this.SendPropertyChanging();
					this._colour = value;
					this.SendPropertyChanged("colour");
					this.OncolourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_plu", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string plu
		{
			get
			{
				return this._plu;
			}
			set
			{
				if ((this._plu != value))
				{
					this.OnpluChanging(value);
					this.SendPropertyChanging();
					this._plu = value;
					this.SendPropertyChanged("plu");
					this.OnpluChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_farm_id", DbType="Int NOT NULL")]
		public int farm_id
		{
			get
			{
				return this._farm_id;
			}
			set
			{
				if ((this._farm_id != value))
				{
					if (this._farm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfarm_idChanging(value);
					this.SendPropertyChanging();
					this._farm_id = value;
					this.SendPropertyChanged("farm_id");
					this.Onfarm_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_barcode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string barcode
		{
			get
			{
				return this._barcode;
			}
			set
			{
				if ((this._barcode != value))
				{
					this.OnbarcodeChanging(value);
					this.SendPropertyChanging();
					this._barcode = value;
					this.SendPropertyChanged("barcode");
					this.OnbarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mix", DbType="TinyInt NOT NULL")]
		public byte mix
		{
			get
			{
				return this._mix;
			}
			set
			{
				if ((this._mix != value))
				{
					this.OnmixChanging(value);
					this.SendPropertyChanging();
					this._mix = value;
					this.SendPropertyChanged("mix");
					this.OnmixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sticker_text", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string sticker_text
		{
			get
			{
				return this._sticker_text;
			}
			set
			{
				if ((this._sticker_text != value))
				{
					this.Onsticker_textChanging(value);
					this.SendPropertyChanging();
					this._sticker_text = value;
					this.SendPropertyChanged("sticker_text");
					this.Onsticker_textChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lenght", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string lenght
		{
			get
			{
				return this._lenght;
			}
			set
			{
				if ((this._lenght != value))
				{
					this.OnlenghtChanging(value);
					this.SendPropertyChanging();
					this._lenght = value;
					this.SendPropertyChanged("lenght");
					this.OnlenghtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bucket_size", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string bucket_size
		{
			get
			{
				return this._bucket_size;
			}
			set
			{
				if ((this._bucket_size != value))
				{
					this.Onbucket_sizeChanging(value);
					this.SendPropertyChanging();
					this._bucket_size = value;
					this.SendPropertyChanged("bucket_size");
					this.Onbucket_sizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sleeve_type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string sleeve_type
		{
			get
			{
				return this._sleeve_type;
			}
			set
			{
				if ((this._sleeve_type != value))
				{
					this.Onsleeve_typeChanging(value);
					this.SendPropertyChanging();
					this._sleeve_type = value;
					this.SendPropertyChanged("sleeve_type");
					this.Onsleeve_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fob", DbType="Float NOT NULL")]
		public double fob
		{
			get
			{
				return this._fob;
			}
			set
			{
				if ((this._fob != value))
				{
					this.OnfobChanging(value);
					this.SendPropertyChanging();
					this._fob = value;
					this.SendPropertyChanged("fob");
					this.OnfobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price_pr_bunch", DbType="Float NOT NULL")]
		public double price_pr_bunch
		{
			get
			{
				return this._price_pr_bunch;
			}
			set
			{
				if ((this._price_pr_bunch != value))
				{
					this.Onprice_pr_bunchChanging(value);
					this.SendPropertyChanging();
					this._price_pr_bunch = value;
					this.SendPropertyChanged("price_pr_bunch");
					this.Onprice_pr_bunchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fairtrade", DbType="TinyInt NOT NULL")]
		public byte fairtrade
		{
			get
			{
				return this._fairtrade;
			}
			set
			{
				if ((this._fairtrade != value))
				{
					this.OnfairtradeChanging(value);
					this.SendPropertyChanging();
					this._fairtrade = value;
					this.SendPropertyChanged("fairtrade");
					this.OnfairtradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bunch_pr_box", DbType="Int NOT NULL")]
		public int bunch_pr_box
		{
			get
			{
				return this._bunch_pr_box;
			}
			set
			{
				if ((this._bunch_pr_box != value))
				{
					this.Onbunch_pr_boxChanging(value);
					this.SendPropertyChanging();
					this._bunch_pr_box = value;
					this.SendPropertyChanged("bunch_pr_box");
					this.Onbunch_pr_boxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bunch_pr_bucket", DbType="Int NOT NULL")]
		public int bunch_pr_bucket
		{
			get
			{
				return this._bunch_pr_bucket;
			}
			set
			{
				if ((this._bunch_pr_bucket != value))
				{
					this.Onbunch_pr_bucketChanging(value);
					this.SendPropertyChanging();
					this._bunch_pr_bucket = value;
					this.SendPropertyChanged("bunch_pr_bucket");
					this.Onbunch_pr_bucketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stems_pr_bunch", DbType="Int NOT NULL")]
		public int stems_pr_bunch
		{
			get
			{
				return this._stems_pr_bunch;
			}
			set
			{
				if ((this._stems_pr_bunch != value))
				{
					this.Onstems_pr_bunchChanging(value);
					this.SendPropertyChanging();
					this._stems_pr_bunch = value;
					this.SendPropertyChanged("stems_pr_bunch");
					this.Onstems_pr_bunchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pake_rete", DbType="Int NOT NULL")]
		public int pake_rete
		{
			get
			{
				return this._pake_rete;
			}
			set
			{
				if ((this._pake_rete != value))
				{
					this.Onpake_reteChanging(value);
					this.SendPropertyChanging();
					this._pake_rete = value;
					this.SendPropertyChanged("pake_rete");
					this.Onpake_reteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="farm_flower", Storage="_farm", ThisKey="farm_id", OtherKey="farm_id", IsForeignKey=true)]
		public farm farm
		{
			get
			{
				return this._farm.Entity;
			}
			set
			{
				farm previousValue = this._farm.Entity;
				if (((previousValue != value) 
							|| (this._farm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._farm.Entity = null;
						previousValue.flowers.Remove(this);
					}
					this._farm.Entity = value;
					if ((value != null))
					{
						value.flowers.Add(this);
						this._farm_id = value.farm_id;
					}
					else
					{
						this._farm_id = default(int);
					}
					this.SendPropertyChanged("farm");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
